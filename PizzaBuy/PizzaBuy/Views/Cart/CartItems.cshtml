@model List<PizzaBuy.Models.Domain.CartItem>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@{
    var user = await signInManager.UserManager.GetUserAsync(User);
    var userId = user?.Id;
}

<div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <div class="bg-secondary bg-opacity-10 py-2" style="background: linear-gradient(to right, #D14545, #FFD045);">
        <div class="container">
            <h1>Cart</h1>
        </div>
        @if (Model.Count == 0)
        {
            <p>No items in the cart</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Product Name</th>
                        <th scope="col">Qty</th>
                        <th scope="col">Price</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cartItem in Model)
                    {
                        if (userId == cartItem.UserId && !cartItem.IsOrdered)
                        {
                            <tr>
                                <td>@cartItem.ProductName</td>
                                <td>
                                    <form method="post" asp-controller="Cart" asp-action="IncrementCartItem">
                                        <input type="hidden" name="cartItemId" value="@cartItem.CartItemId" />
                                        <button type="submit" class="btn btn-success">+</button>
                                    </form>
                                    @cartItem.Quantity
                                    <form method="post" asp-controller="Cart" asp-action="DecrementCartItem">
                                        <input type="hidden" name="cartItemId" value="@cartItem.CartItemId" />
                                        <button type="submit" class="btn btn-danger">-</button>
                                    </form>
                                </td>
                                <td>@(cartItem.Quantity * cartItem.ProductPrice)</td>
                                <td>
                                    <form method="post" asp-controller="Cart" asp-action="RemoveCartItem">
                                        <input type="hidden" name="cartItemId" value="@cartItem.CartItemId" />
                                        <button type="submit" class="btn btn-danger">Remove</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <p>Total: @Model.Where(x => userId == x.UserId && !x.IsOrdered).Sum(x => x.Quantity * x.ProductPrice)</p>
            <form method="post" asp-controller="Checkout" asp-action="Index">
                @*<button type="submit" class="btn btn-primary" asp-area="" asp-controller="Order" asp-action="PlaceOrder">Proceed to Checkout</button>*@
                <button type="submit" class="btn btn-primary" asp-area="" asp-controller="CheckOut" asp-action="Index">Proceed to Checkout</button>
            </form>
        }
    </div>
</div>
